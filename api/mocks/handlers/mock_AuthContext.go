// Code generated by mockery v2.40.1. DO NOT EDIT.

package handlers

import (
	gin "github.com/gin-gonic/gin"
	handlers "github.com/sebboness/yektaspoints/handlers"
	mock "github.com/stretchr/testify/mock"
)

// MockAuthContext is an autogenerated mock type for the AuthContext type
type MockAuthContext struct {
	mock.Mock
}

type MockAuthContext_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAuthContext) EXPECT() *MockAuthContext_Expecter {
	return &MockAuthContext_Expecter{mock: &_m.Mock}
}

// GetAuthorizerInfo provides a mock function with given fields: c
func (_m *MockAuthContext) GetAuthorizerInfo(c *gin.Context) handlers.AuthorizerInfo {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for GetAuthorizerInfo")
	}

	var r0 handlers.AuthorizerInfo
	if rf, ok := ret.Get(0).(func(*gin.Context) handlers.AuthorizerInfo); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(handlers.AuthorizerInfo)
	}

	return r0
}

// MockAuthContext_GetAuthorizerInfo_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAuthorizerInfo'
type MockAuthContext_GetAuthorizerInfo_Call struct {
	*mock.Call
}

// GetAuthorizerInfo is a helper method to define mock.On call
//   - c *gin.Context
func (_e *MockAuthContext_Expecter) GetAuthorizerInfo(c interface{}) *MockAuthContext_GetAuthorizerInfo_Call {
	return &MockAuthContext_GetAuthorizerInfo_Call{Call: _e.mock.On("GetAuthorizerInfo", c)}
}

func (_c *MockAuthContext_GetAuthorizerInfo_Call) Run(run func(c *gin.Context)) *MockAuthContext_GetAuthorizerInfo_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockAuthContext_GetAuthorizerInfo_Call) Return(_a0 handlers.AuthorizerInfo) *MockAuthContext_GetAuthorizerInfo_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAuthContext_GetAuthorizerInfo_Call) RunAndReturn(run func(*gin.Context) handlers.AuthorizerInfo) *MockAuthContext_GetAuthorizerInfo_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAuthContext creates a new instance of MockAuthContext. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAuthContext(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAuthContext {
	mock := &MockAuthContext{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
